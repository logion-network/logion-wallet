// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MetaMaskClaimButton renders button only, when authenticated 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <button
        class="Button btn btn-primary"
        type="button"
      >
        Claim
      </button>
    </div>
  </body>,
  "container": <div>
    <button
      class="Button btn btn-primary"
      type="button"
    >
      Claim
    </button>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`MetaMaskClaimButton renders dialog if MetaMask enabled 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="modal-open"
    data-rr-ui-modal-open=""
    style="padding-right: 1024px;"
  >
    <div>
      <button
        class="Button btn btn-primary"
        type="button"
      >
        Claim
      </button>
    </div>
    <div
      class="fade modal-backdrop show"
    />
    <div
      aria-modal="true"
      class="fade Dialog modal show"
      role="dialog"
      style="display: block; padding-right: 0px;"
      tabindex="-1"
    >
      <div
        class="modal-dialog modal-lg modal-dialog-centered"
      >
        <div
          class="modal-content"
        >
          <style>
            
                .Dialog .modal-dialog .modal-content {
                    box-shadow: 0 0 25px [object Object];
                    color: #ffffff;
                    background-color: #0c163d;
                }
                
          </style>
          <form
            class=""
          >
            <div
              class="modal-body"
            >
              <p>
                In order to claim your certified copy of 
                <br />
                «
                <strong>
                  ArtWork.png
                </strong>
                » (
                image/png
                , 
                123456
                 bytes),
                <br />
                you must first sign with your Ethereum address 
              </p>
              <p>
                Error: 
                MetaMask not installed, or user did not connect an account
              </p>
            </div>
            <div
              class="modal-footer"
            >
              <button
                class="Button btn btn-secondary"
                style="background: rgb(12, 22, 61); color: rgb(255, 255, 255);"
                type="button"
              >
                Cancel
              </button>
              <button
                class="Button btn btn-primary"
                type="button"
              >
                Sign
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <button
      class="Button btn btn-primary"
      type="button"
    >
      Claim
    </button>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
