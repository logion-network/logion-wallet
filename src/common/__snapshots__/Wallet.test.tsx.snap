// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders content 1`] = `
<FullWidthPane
  className="Wallet"
  mainTitle="Wallet"
  titleIcon={
    Object {
      "background": Object {
        "from": "#3b6cf4",
        "to": "#6050dc",
      },
      "icon": Object {
        "id": "wallet",
      },
    }
  }
>
  <Content
    address=""
    balances={Array []}
    settingsPath=""
    transactions={Array []}
    transactionsPath={[Function]}
    type="Wallet"
  />
</FullWidthPane>
`;

exports[`renders loader with no data 1`] = `<Loader />`;

exports[`renders with all data 1`] = `
<React.Fragment>
  <Row>
    <div
      className="col-xxxl-8"
    >
      <Frame
        fillHeight={true}
        title="Asset balances"
      >
        <Table
          columns={
            Array [
              Object {
                "header": "",
                "render": [Function],
                "width": "70px",
              },
              Object {
                "align": "left",
                "header": "Asset name",
                "render": [Function],
                "width": "200px",
              },
              Object {
                "align": "right",
                "header": "Balance",
                "render": [Function],
                "width": "140px",
              },
              Object {
                "header": "Last transaction date",
                "render": [Function],
              },
              Object {
                "header": "Last transaction type",
                "render": [Function],
              },
              Object {
                "align": "right",
                "header": "Last transaction amount",
                "render": [Function],
              },
              Object {
                "header": "",
                "render": [Function],
                "width": "201px",
              },
            ]
          }
          data={
            Array [
              Object {
                "available": PrefixedNumber {
                  "_prefix": Object {
                    "symbol": "a",
                    "tenExponent": -18,
                  },
                  "_scientificNumber": ScientificNumber {
                    "_normalized": NormalizedNumber {
                      "_decimalPart": "",
                      "_integerPart": "42",
                      "_negative": false,
                      "_normalized": "42.",
                    },
                    "_tenExponent": -18,
                  },
                },
                "coin": Object {
                  "id": "lgnt",
                  "symbol": "LGNT",
                },
                "level": 0.1,
                "reserved": PrefixedNumber {
                  "_prefix": Object {
                    "symbol": "a",
                    "tenExponent": -18,
                  },
                  "_scientificNumber": ScientificNumber {
                    "_normalized": NormalizedNumber {
                      "_decimalPart": "",
                      "_integerPart": "",
                      "_negative": false,
                      "_normalized": ".",
                    },
                    "_tenExponent": -18,
                  },
                },
                "total": PrefixedNumber {
                  "_prefix": Object {
                    "symbol": "a",
                    "tenExponent": -18,
                  },
                  "_scientificNumber": ScientificNumber {
                    "_normalized": NormalizedNumber {
                      "_decimalPart": "",
                      "_integerPart": "42",
                      "_negative": false,
                      "_normalized": "42.",
                    },
                    "_tenExponent": -18,
                  },
                },
              },
            ]
          }
          renderEmpty={[Function]}
        />
      </Frame>
    </div>
    <div
      className="col-xxxl-4"
    >
      <Frame
        className="gauge-container"
        fillHeight={true}
        title={
          <div
            className="gauge-title"
          >
            <CoinIcon
              coinId="lgnt"
              height="72px"
            />
            <span>
              Current 
              LGNT
               balance
            </span>
          </div>
        }
      >
        <WalletGauge
          balance={
            Object {
              "available": PrefixedNumber {
                "_prefix": Object {
                  "symbol": "a",
                  "tenExponent": -18,
                },
                "_scientificNumber": ScientificNumber {
                  "_normalized": NormalizedNumber {
                    "_decimalPart": "",
                    "_integerPart": "42",
                    "_negative": false,
                    "_normalized": "42.",
                  },
                  "_tenExponent": -18,
                },
              },
              "coin": Object {
                "id": "lgnt",
                "symbol": "LGNT",
              },
              "level": 0.1,
              "reserved": PrefixedNumber {
                "_prefix": Object {
                  "symbol": "a",
                  "tenExponent": -18,
                },
                "_scientificNumber": ScientificNumber {
                  "_normalized": NormalizedNumber {
                    "_decimalPart": "",
                    "_integerPart": "",
                    "_negative": false,
                    "_normalized": ".",
                  },
                  "_tenExponent": -18,
                },
              },
              "total": PrefixedNumber {
                "_prefix": Object {
                  "symbol": "a",
                  "tenExponent": -18,
                },
                "_scientificNumber": ScientificNumber {
                  "_normalized": NormalizedNumber {
                    "_decimalPart": "",
                    "_integerPart": "42",
                    "_negative": false,
                    "_normalized": "42.",
                  },
                  "_tenExponent": -18,
                },
              },
            }
          }
          type="arc"
        />
      </Frame>
    </div>
  </Row>
</React.Fragment>
`;
