// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders arc 1`] = `
<div
  className="WalletGauge arc"
>
  <Gauge
    level={0.5}
    readingDecimalPart="00"
    readingIntegerPart="20"
    type="arc"
    unit="mLGNT"
  />
  <BalanceDetails
    balance={
      Object {
        "available": PrefixedNumber {
          "_prefix": Object {
            "symbol": "m",
            "tenExponent": -3,
          },
          "_scientificNumber": ScientificNumber {
            "_normalized": NormalizedNumber {
              "_decimalPart": "",
              "_integerPart": "20",
              "_negative": false,
              "_normalized": "20.",
            },
            "_tenExponent": -3,
          },
        },
        "coin": Object {
          "id": "lgnt",
          "symbol": "LGNT",
        },
        "level": 0.5,
        "reserved": PrefixedNumber {
          "_prefix": Object {
            "symbol": "",
            "tenExponent": 0,
          },
          "_scientificNumber": ScientificNumber {
            "_normalized": NormalizedNumber {
              "_decimalPart": "",
              "_integerPart": "",
              "_negative": false,
              "_normalized": ".",
            },
            "_tenExponent": 0,
          },
        },
        "total": PrefixedNumber {
          "_prefix": Object {
            "symbol": "m",
            "tenExponent": -3,
          },
          "_scientificNumber": ScientificNumber {
            "_normalized": NormalizedNumber {
              "_decimalPart": "",
              "_integerPart": "20",
              "_negative": false,
              "_normalized": "20.",
            },
            "_tenExponent": -3,
          },
        },
      }
    }
    type="arc"
  />
  <div
    className="actions"
  >
    <Button
      onClick={[Function]}
      slim={true}
    >
      <Icon
        icon={
          Object {
            "id": "send",
          }
        }
      />
       Send
    </Button>
  </div>
  <Dialog
    actions={
      Array [
        Object {
          "buttonText": "Cancel",
          "buttonVariant": "secondary-polkadot",
          "callback": [Function],
          "disabled": undefined,
          "id": "cancel",
        },
        Object {
          "buttonText": "Transfer",
          "buttonVariant": "polkadot",
          "callback": [Function],
          "disabled": true,
          "id": "transfer",
        },
      ]
    }
    show={false}
    size="lg"
  >
    <h3>
      
    </h3>
    <React.Fragment>
      <FormGroup
        colors={
          Object {
            "background": "#0c163d",
            "borderColor": "#e6007a",
            "foreground": "#ffffff",
          }
        }
        control={
          <FormControl
            isInvalid={false}
            onChange={[Function]}
            placeholder="The beneficiary's SS58 address"
            type="text"
            value=""
          />
        }
        id="destination"
        label="Destination"
      />
      <FormGroup
        colors={
          Object {
            "background": "#0c163d",
            "borderColor": "#e6007a",
            "foreground": "#ffffff",
          }
        }
        control={
          <InputGroup
            hasValidation={true}
          >
            <FormControl
              isInvalid={false}
              onChange={[Function]}
              placeholder="The amount to transfer"
              type="text"
              value=""
            />
            <DropdownButton
              id="input-group-dropdown-1"
              title="LGNT"
            >
              <DropdownItem
                onClick={[Function]}
              >
                LGNT
              </DropdownItem>
              <DropdownItem
                onClick={[Function]}
              >
                mLGNT
              </DropdownItem>
              <DropdownItem
                onClick={[Function]}
              >
                µLGNT
              </DropdownItem>
              <DropdownItem
                onClick={[Function]}
              >
                nLGNT
              </DropdownItem>
              <DropdownItem
                onClick={[Function]}
              >
                pLGNT
              </DropdownItem>
              <DropdownItem
                onClick={[Function]}
              >
                fLGNT
              </DropdownItem>
              <DropdownItem
                onClick={[Function]}
              >
                aLGNT
              </DropdownItem>
            </DropdownButton>
            <Feedback
              type="invalid"
            >
              Please enter a valid amount.
            </Feedback>
          </InputGroup>
        }
        id="amount"
        label="Amount"
        noFeedback={true}
      />
      <ExtrinsicSubmissionStateView
        successMessage="Transfer successful."
      />
    </React.Fragment>
  </Dialog>
</div>
`;

exports[`renders linear 1`] = `
<div
  className="WalletGauge linear"
>
  <Gauge
    level={0.5}
    readingDecimalPart="00"
    readingIntegerPart="20"
    type="linear"
    unit="mLGNT"
  />
  <BalanceDetails
    balance={
      Object {
        "available": PrefixedNumber {
          "_prefix": Object {
            "symbol": "m",
            "tenExponent": -3,
          },
          "_scientificNumber": ScientificNumber {
            "_normalized": NormalizedNumber {
              "_decimalPart": "",
              "_integerPart": "20",
              "_negative": false,
              "_normalized": "20.",
            },
            "_tenExponent": -3,
          },
        },
        "coin": Object {
          "id": "lgnt",
          "symbol": "LGNT",
        },
        "level": 0.5,
        "reserved": PrefixedNumber {
          "_prefix": Object {
            "symbol": "",
            "tenExponent": 0,
          },
          "_scientificNumber": ScientificNumber {
            "_normalized": NormalizedNumber {
              "_decimalPart": "",
              "_integerPart": "",
              "_negative": false,
              "_normalized": ".",
            },
            "_tenExponent": 0,
          },
        },
        "total": PrefixedNumber {
          "_prefix": Object {
            "symbol": "m",
            "tenExponent": -3,
          },
          "_scientificNumber": ScientificNumber {
            "_normalized": NormalizedNumber {
              "_decimalPart": "",
              "_integerPart": "20",
              "_negative": false,
              "_normalized": "20.",
            },
            "_tenExponent": -3,
          },
        },
      }
    }
    type="linear"
  />
  <div
    className="actions"
  >
    <Button
      onClick={[Function]}
      slim={true}
    >
      <Icon
        icon={
          Object {
            "id": "send",
          }
        }
      />
       Send
    </Button>
  </div>
  <Dialog
    actions={
      Array [
        Object {
          "buttonText": "Cancel",
          "buttonVariant": "secondary-polkadot",
          "callback": [Function],
          "disabled": undefined,
          "id": "cancel",
        },
        Object {
          "buttonText": "Transfer",
          "buttonVariant": "polkadot",
          "callback": [Function],
          "disabled": true,
          "id": "transfer",
        },
      ]
    }
    show={false}
    size="lg"
  >
    <h3>
      
    </h3>
    <React.Fragment>
      <FormGroup
        colors={
          Object {
            "background": "#0c163d",
            "borderColor": "#e6007a",
            "foreground": "#ffffff",
          }
        }
        control={
          <FormControl
            isInvalid={false}
            onChange={[Function]}
            placeholder="The beneficiary's SS58 address"
            type="text"
            value=""
          />
        }
        id="destination"
        label="Destination"
      />
      <FormGroup
        colors={
          Object {
            "background": "#0c163d",
            "borderColor": "#e6007a",
            "foreground": "#ffffff",
          }
        }
        control={
          <InputGroup
            hasValidation={true}
          >
            <FormControl
              isInvalid={false}
              onChange={[Function]}
              placeholder="The amount to transfer"
              type="text"
              value=""
            />
            <DropdownButton
              id="input-group-dropdown-1"
              title="LGNT"
            >
              <DropdownItem
                onClick={[Function]}
              >
                LGNT
              </DropdownItem>
              <DropdownItem
                onClick={[Function]}
              >
                mLGNT
              </DropdownItem>
              <DropdownItem
                onClick={[Function]}
              >
                µLGNT
              </DropdownItem>
              <DropdownItem
                onClick={[Function]}
              >
                nLGNT
              </DropdownItem>
              <DropdownItem
                onClick={[Function]}
              >
                pLGNT
              </DropdownItem>
              <DropdownItem
                onClick={[Function]}
              >
                fLGNT
              </DropdownItem>
              <DropdownItem
                onClick={[Function]}
              >
                aLGNT
              </DropdownItem>
            </DropdownButton>
            <Feedback
              type="invalid"
            >
              Please enter a valid amount.
            </Feedback>
          </InputGroup>
        }
        id="amount"
        label="Amount"
        noFeedback={true}
      />
      <ExtrinsicSubmissionStateView
        successMessage="Transfer successful."
      />
    </React.Fragment>
  </Dialog>
</div>
`;
