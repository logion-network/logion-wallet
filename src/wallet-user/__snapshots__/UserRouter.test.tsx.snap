// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders 1`] = `
<Routes>
  <Route
    element={<TrustProtection />}
    path="/protection"
  />
  <Route
    element={
      <Settings
        showContactInformation={false}
      />
    }
    path="/settings"
  />
  <Route
    element={<Recovery />}
    path="/recovery"
  />
  <Route
    element={
      <Transactions
        address="5H4MvAsobfZ6bBCDyj5dsrWYLrA8HrRzaqa9p61UXtxMhSCY"
        balances={Array []}
        transactions={null}
        type="Wallet"
      />
    }
    path="/wallet/:coinId"
  />
  <Route
    element={
      <Transactions
        address=""
        balances={null}
        transactions={null}
        type="Vault"
      />
    }
    path="/vault/:coinId"
  />
  <Route
    element={
      <LocsDashboard
        actions={
          <LocCreation
            locType="Transaction"
          />
        }
        iconId="loc"
        loading={true}
        locDetailsPath={[Function]}
        locs={
          Locs {
            "_completed": Array [],
            "_waiting": Array [],
            "_workInProgress": Array [],
            "allLocs": Array [],
            "viewer": "User",
          }
        }
        settingsPath="/user/settings"
        title="Transaction LOCs"
      />
    }
    path="/loc/transaction"
  />
  <Route
    element={
      <LocsDashboard
        actions={
          <LocCreation
            locType="Collection"
          />
        }
        iconId="collection"
        loading={true}
        locDetailsPath={[Function]}
        locs={
          Locs {
            "_completed": Array [],
            "_waiting": Array [],
            "_workInProgress": Array [],
            "allLocs": Array [],
            "viewer": "User",
          }
        }
        settingsPath="/user/settings"
        title="Collection LOCs"
      />
    }
    path="/loc/collection"
  />
  <Route
    element={
      <LocsDashboard
        actions={
          <LocCreation
            locType="Identity"
          />
        }
        iconId="identity"
        loading={true}
        locDetailsPath={[Function]}
        locs={
          Locs {
            "_completed": Array [],
            "_waiting": Array [],
            "_workInProgress": Array [],
            "allLocs": Array [],
            "viewer": "User",
          }
        }
        settingsPath="/user/settings"
        title="Identity LOCs"
      />
    }
    path="/loc/identity"
  />
  <Route
    element={
      <UserLocDetails
        backPath="/user/loc/transaction"
        contributionMode="Requester"
        detailsPath={[Function]}
      />
    }
    path="/loc/transaction/:locId"
  />
  <Route
    element={
      <UserLocDetails
        backPath="/user/loc/collection"
        contributionMode="Requester"
        detailsPath={[Function]}
      />
    }
    path="/loc/collection/:locId"
  />
  <Route
    element={
      <DashboardCertiticateRouter
        detailsPath={[Function]}
        locType="Collection"
        viewer="User"
      />
    }
    path="/loc/collection/:locId/certificate/:itemId"
  />
  <Route
    element={
      <UserLocDetails
        backPath="/user/loc/identity"
        contributionMode="Requester"
        detailsPath={[Function]}
      />
    }
    path="/loc/identity/:locId"
  />
  <Route
    element={<Home />}
    path="/"
  />
  <Route
    element={
      <IdentityLocRequest
        backPath="/user/loc/identity"
      />
    }
    path="/loc/identity-request"
  />
  <Route
    element={
      <DataLocRequest
        backPath="/user/loc/collection"
        iconId="collection"
        locType="Collection"
      />
    }
    path="/loc/collection-request"
  />
  <Route
    element={
      <DataLocRequest
        backPath="/user/loc/transaction"
        iconId="loc"
        locType="Transaction"
      />
    }
    path="/loc/transaction-request"
  />
  <Route
    element={<IssuerDashboard />}
    path="/verified-issuer"
  />
  <Route
    element={
      <UserLocDetails
        backPath="/user/verified-issuer"
        contributionMode="VerifiedIssuer"
        detailsPath={[Function]}
      />
    }
    path="/verified-issuer/:locId"
  />
  <Route
    element={
      <IdenfyVerificationResult
        detailsPath={[Function]}
      />
    }
    path="/idenfy"
  />
  <Route
    element={<UserDocumentClaimHistory />}
    path="/loc/:locType/:locId/claims/:hash"
  />
  <Route
    element={
      <UserTokensRecordPane
        contributionMode="Requester"
      />
    }
    path="/loc/:locType/:locId/records"
  />
  <Route
    element={
      <UserTokensRecordPane
        contributionMode="VerifiedIssuer"
      />
    }
    path="/verified-issuer/:locId/records"
  />
  <Route
    element={
      <UserTokensRecordDocumentClaimHistory
        contributionMode="Requester"
      />
    }
    path="/loc/:locType/:locId/records/:recordId/claims/:hash"
  />
  <Route
    element={
      <UserTokensRecordDocumentClaimHistory
        contributionMode="VerifiedIssuer"
      />
    }
    path="/verified-issuer/:locId/records/:recordId/claims/:hash"
  />
  <Route
    element={
      <UserInvitedContributorsPane
        contributionMode="Requester"
      />
    }
    path="/loc/:locType/:locId/invited-contributors"
  />
</Routes>
`;
